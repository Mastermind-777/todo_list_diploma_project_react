{"version":3,"sources":["Firebase/index.jsx","Context/index.jsx","Hooks/index.jsx","Components/Sidebar.jsx","Components/Main.jsx","images/logo.jpg","Components/User.jsx","Components/Modal.jsx","Components/TodoForm.jsx","Constants/index.jsx","Components/AddNewTodo.jsx","Components/Calendar.jsx","Components/ProjectForm.jsx","Components/RenameProject.jsx","Components/Project.jsx","Components/AddNewProject.jsx","Components/Projects.jsx","Components/Todo.jsx","Components/Next7Days.jsx","Components/Todos.jsx","Components/EditTodo.jsx","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","TodoContext","createContext","TodoContextProvider","children","defaultProject","useState","selectedProject","setSelectedProject","undefined","selectedTodo","setSelectedTodo","todos","setTodos","useEffect","unsubscribe","firestore","collection","onSnapshot","snapshot","data","docs","map","doc","id","useTodos","projectsWithStats","projects","setProjectsWithStats","project","numOfTodos","filter","todo","projectName","name","checked","length","useProjectsWithStats","setProjects","useProjects","filteredTodos","setFilteredTodos","todayDateFormated","moment","format","date","todoDate","todayDate","diffDays","diff","useFilterTodos","Provider","value","Sidebar","useContext","sidebarRef","useRef","document","addEventListener","handleClick","removeEventListener","e","target","current","contains","className","ref","Main","User","src","logo","alt","href","Modal","showModal","setShowModal","modalRef","modalAnimation","useSpring","opacity","top","config","friction","onClick","div","style","TodoForm","handleSubmit","heading","text","setText","day","setDay","time","setTime","todoProject","setTodoProject","showButtons","utils","DateFnsUtils","onSubmit","type","onChange","placeholder","autoFocus","DatePicker","TimePicker","color","size","calendarItems","AddNewTodo","Date","preventDefault","includes","add","randomcolor","luminosity","Calendar","showMenu","setShowMenu","spin","transform","menuAnimation","display","lineHeight","item","ProjectForm","setValue","confirmButtonText","RenameProject","newProjectName","setNewProjectName","projectsRef","todosRef","oldProjectName","where","get","then","querySnapshot","empty","update","forEach","alert","renameProject","Project","edit","fadeIn","from","marginTop","to","btnTransitions","useTransition","right","enter","leave","props","editProject","delete","deleteProject","AddNewProject","setProjectName","Projects","setEdit","pencilColor","span","Todo","hover","setHover","handleDelete","deleteTodo","checkTransitions","position","onMouseEnter","onMouseLeave","checkTodo","nextDayDate","repeatedTodo","repeatNextDay","Next7Days","weekTodos","setWeekTodos","sortedTodosByDay","number","today","parseInt","arrangeDays","slice","concat","Todos","EditTodo","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.755474d0.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app'\r\nimport 'firebase/compat/firestore'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCr3dKwNoFWRV2rTjZkxLIxpy3jF2ModNc\",\r\n  authDomain: \"todo-app-95eec.firebaseapp.com\",\r\n  projectId: \"todo-app-95eec\",\r\n  storageBucket: \"todo-app-95eec.appspot.com\",\r\n  messagingSenderId: \"741618778321\",\r\n  appId: \"1:741618778321:web:c7d9be94fb0564263945f0\"\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport default firebase","import React, { createContext, useState } from 'react'\r\nimport { useTodos, useProjects, useFilterTodos, useProjectsWithStats } from '../Hooks/index'\r\n\r\nconst TodoContext = createContext()\r\n\r\nfunction TodoContextProvider({children}){\r\n    const defaultProject = 'today'\r\n    const [selectedProject, setSelectedProject] = useState(defaultProject)\r\n    const [selectedTodo, setSelectedTodo] = useState(undefined)\r\n\r\n    const todos = useTodos()\r\n    const projects = useProjects()\r\n    const projectsWithStats = useProjectsWithStats(projects, todos)\r\n    const filteredTodos = useFilterTodos(todos, selectedProject)\r\n\r\n    return (\r\n        <TodoContext.Provider\r\n            value={\r\n                {\r\n                    defaultProject,\r\n                    selectedProject,\r\n                    setSelectedProject,\r\n                    todos : filteredTodos,\r\n                    projects : projectsWithStats,\r\n                    selectedTodo,\r\n                    setSelectedTodo\r\n                }\r\n            }\r\n        >\r\n            {children}\r\n        </TodoContext.Provider>\r\n    )\r\n}\r\n\r\nexport { TodoContextProvider, TodoContext }","import moment from 'moment'\r\nimport { useState, useEffect } from 'react'\r\nimport firebase from '../Firebase/index'\r\n\r\nexport function useTodos(){\r\n    const [todos, setTodos] = useState([])\r\n\r\n    useEffect(() => {\r\n        let unsubscribe = firebase\r\n        .firestore()\r\n        .collection('todos')\r\n        .onSnapshot( snapshot => {\r\n            const data = snapshot.docs.map( doc => {\r\n                return {\r\n                    id : doc.id,\r\n                    ...doc.data()\r\n                }\r\n            })\r\n            setTodos(data)\r\n        })\r\n\r\n        return () => unsubscribe()\r\n    }, [])\r\n\r\n    return todos\r\n}\r\n\r\nexport function useFilterTodos(todos, selectedProject){\r\n    const [filteredTodos, setFilteredTodos] = useState([])\r\n\r\n    useEffect( () => {\r\n        let data;\r\n        const todayDateFormated = moment().format('MM/DD/YYYY')\r\n\r\n        if(selectedProject === 'today'){\r\n            data = todos.filter(todo => todo.date === todayDateFormated)\r\n        }else if(selectedProject === 'next 7 days'){\r\n            data = todos.filter(todo => {\r\n                const todoDate = moment(todo.date, 'MM/DD/YYYY')\r\n                const todayDate = moment(todayDateFormated, 'MM/DD/YYYY')\r\n\r\n                const diffDays = todoDate.diff(todayDate, 'days')\r\n\r\n                return diffDays >=0 && diffDays < 7\r\n            })\r\n        }else if( selectedProject === 'all days'){\r\n            data = todos\r\n        }else{\r\n            data = todos.filter(todo => todo.projectName === selectedProject)\r\n        }\r\n\r\n        setFilteredTodos(data)\r\n    }, [todos, selectedProject])\r\n\r\n    return filteredTodos\r\n}\r\n\r\nexport function useProjects(){\r\n    const [projects, setProjects] = useState([])\r\n\r\n    useEffect(() => {\r\n        let unsubscribe = firebase\r\n        .firestore()\r\n        .collection('projects')\r\n        .onSnapshot( snapshot => {\r\n            const data = snapshot.docs.map( doc => {\r\n                return {\r\n                    id : doc.id,\r\n                    name : doc.data().name\r\n                }\r\n            })\r\n            setProjects(data)\r\n        })\r\n\r\n        return () => unsubscribe()\r\n    }, [])\r\n\r\n    return projects\r\n}\r\n\r\nexport function useProjectsWithStats(projects, todos){\r\n    const [projectsWithStats, setProjectsWithStats] = useState([])\r\n\r\n    useEffect(() => {\r\n        const data = projects.map((project) => {\r\n            return {\r\n                numOfTodos : todos.filter( todo => todo.projectName === project.name && !todo.checked).length,\r\n                ...project\r\n            }\r\n        })\r\n\r\n        setProjectsWithStats(data)\r\n    }, [projects, todos])\r\n\r\n    return projectsWithStats\r\n}","import React, { useContext, useEffect, useRef } from 'react'\r\nimport { TodoContext } from '../Context/index'\r\n\r\nfunction Sidebar({ children }){\r\n    // CONTEXT\r\n    const { setSelectedTodo } = useContext(TodoContext)\r\n\r\n    // REF\r\n    const sidebarRef = useRef()\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', handleClick)\r\n\r\n        return () => document.removeEventListener('click', handleClick)\r\n    })\r\n\r\n    const handleClick = e => {\r\n        if(e.target === sidebarRef.current || sidebarRef.current.contains(e.target)){\r\n            setSelectedTodo(undefined)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className='Sidebar'\r\n            ref={sidebarRef}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import React from 'react'\r\n\r\nfunction Main({children}) {\r\n\r\n\r\n  return (\r\n    <div className='Main'>\r\n      {children}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Main","export default __webpack_public_path__ + \"static/media/logo.fd9fe050.jpg\";","import React from 'react'\r\nimport logo from '../images/logo.jpg'\r\n\r\nfunction User() {\r\n\r\n\r\n  return (\r\n    <div className='User'>\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"logo\" />\r\n      </div>\r\n      <div className=\"info\">\r\n        <p>Anastasia K</p>\r\n        <a href={'url'}>Logout!</a>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default User","import React, { useRef } from \"react\";\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\nfunction Modal({children, showModal, setShowModal}){\r\n    const modalRef = useRef()\r\n\r\n    const closeModal = (e) => {\r\n        if(e.target === modalRef.current){\r\n            setShowModal(false)\r\n        }\r\n    }\r\n\r\n    // ANIMATION\r\n    const modalAnimation = useSpring({\r\n        opacity : showModal ? 1 : 0,\r\n        top : showModal ? '25%' : '0%',\r\n        config : { friction : 10 }\r\n    })\r\n    \r\n    return (\r\n        showModal &&\r\n        <div className=\"Modal\" ref={modalRef} onClick={closeModal}>\r\n            <animated.div style={modalAnimation} className=\"container\">\r\n                {children}\r\n            </animated.div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal","import React from 'react'\r\nimport { Bell, CalendarDay, Clock, Palette, X } from 'react-bootstrap-icons'\r\nimport { DatePicker, TimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nfunction TodoForm({\r\n    handleSubmit,\r\n    heading = false,\r\n    text, setText,\r\n    day, setDay,\r\n    time, setTime,\r\n    todoProject, setTodoProject,\r\n    projects,\r\n    showButtons = false,\r\n    setShowModal = false\r\n}){\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <form onSubmit={handleSubmit} className='TodoForm'>\r\n                <div className=\"text\">\r\n                    {\r\n                        heading && \r\n                        <h3>{heading}</h3>\r\n                    }\r\n                    <input\r\n                        type='text'\r\n                        value={text}\r\n                        onChange={e => setText(e.target.value)}\r\n                        placeholder='To do ...'\r\n                        autoFocus\r\n                    />\r\n                </div>\r\n                <div className=\"remind\">\r\n                    <Bell />\r\n                    <p>Remind Me!</p>\r\n                </div>\r\n                <div className=\"pick-day\">\r\n                    <div className=\"title\">\r\n                        <CalendarDay />\r\n                        <p>Choose a day</p>\r\n                    </div>\r\n                    <DatePicker\r\n                        value={day}\r\n                        onChange={day => setDay(day)}\r\n                    />\r\n                </div>\r\n                <div className=\"pick-time\">\r\n                    <div className=\"title\">\r\n                        <Clock />\r\n                        <p>Choose time</p>\r\n                    </div>\r\n                    <TimePicker\r\n                        value={time}\r\n                        onChange={time => setTime(time)}\r\n                    />\r\n                </div>\r\n                <div className=\"pick-project\">\r\n                    <div className=\"title\">\r\n                        <Palette />\r\n                        <p>Choose a project</p>\r\n                    </div>\r\n                    <div className=\"projects\">\r\n                        {\r\n                            projects.length > 0 ?\r\n                            projects.map( project => \r\n                                <div\r\n                                    className={`project ${todoProject === project.name ? \"active\" : \"\"}`}\r\n                                    onClick={() => setTodoProject(project.name)}\r\n                                    key={project.id}\r\n                                >\r\n                                    {project.name}\r\n                                </div>    \r\n                            )\r\n                            :\r\n                            <div style={{color:'#ff0000'}}>\r\n                                Please add a project before proceeding\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {\r\n                    showButtons &&\r\n                    <div>\r\n                        <div className=\"cancel\" onClick={() => setShowModal(false)}>\r\n                            <X size='40' />\r\n                        </div>\r\n                        <div className=\"confirm\">\r\n                            <button>+ Add to do</button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </form>\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n\r\nexport default TodoForm","export const calendarItems = ['today', 'next 7 days', 'all days']","import React, {useContext, useEffect, useState} from 'react'\r\nimport Modal from './Modal'\r\nimport TodoForm from './TodoForm'\r\nimport { TodoContext } from '../Context'\r\nimport { calendarItems } from '../Constants'\r\nimport firebase from '../Firebase/index'\r\nimport moment from 'moment'\r\nimport randomcolor from 'randomcolor'\r\n\r\nfunction AddNewTodo(){\r\n    // CONTEXT\r\n    const { projects, selectedProject } = useContext(TodoContext)\r\n    \r\n    // STATE\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState(new Date())\r\n    const [time, setTime] = useState(new Date())\r\n    const [todoProject, setTodoProject] = useState(selectedProject)\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n\r\n        if( text && !calendarItems.includes(todoProject)){\r\n            firebase\r\n                .firestore()\r\n                .collection('todos')\r\n                .add(\r\n                    {\r\n                        text : text,\r\n                        date : moment(day).format('MM/DD/YYYY'),\r\n                        day : moment(day).format('d'),\r\n                        time : moment(time).format('HH:mm'),\r\n                        checked : false,\r\n                        color : randomcolor({luminosity : 'dark'}),\r\n                        projectName : todoProject\r\n                    }\r\n                )\r\n\r\n            setShowModal(false)\r\n            setText('')\r\n            setDay(new Date())\r\n            setTime(new Date())\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        setTodoProject(selectedProject)\r\n    }, [selectedProject])\r\n\r\n    return (\r\n        <div className='AddNewTodo'>\r\n            <div className=\"btn\">\r\n                <button onClick={() => setShowModal(true)}>\r\n                    + New Todo\r\n                </button>\r\n            </div>\r\n            <Modal showModal={showModal} setShowModal={setShowModal}>\r\n                <TodoForm\r\n                    handleSubmit={handleSubmit}\r\n                    heading='Add new to do!'\r\n                    text={text}\r\n                    setText={setText}\r\n                    day={day}\r\n                    setDay={setDay}\r\n                    time={time}\r\n                    setTime={setTime}\r\n                    todoProject={todoProject}\r\n                    setTodoProject={setTodoProject}\r\n                    projects={projects}\r\n                    showButtons={true}\r\n                    setShowModal={setShowModal}\r\n                />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewTodo","import React, {useContext, useState} from 'react'\r\nimport { CalendarDate, CaretUp } from 'react-bootstrap-icons'\r\nimport { calendarItems } from '../Constants'\r\nimport { TodoContext } from '../Context'\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\nfunction Calendar(){\r\n    // SATATE\r\n    const [showMenu, setShowMenu] = useState(true)\r\n\r\n    // CONTEXT\r\n    const { setSelectedProject } = useContext(TodoContext)\r\n    \r\n    // ANIMATION\r\n    const spin = useSpring({\r\n        transform : showMenu ? 'rotate(0deg)' : 'rotate(180deg)',\r\n        config : { friction : 10 }\r\n    })\r\n\r\n    const menuAnimation = useSpring({\r\n        display : showMenu ? 'block' : 'none',\r\n        lineHeight : showMenu ? 1.2 : 0\r\n    })\r\n\r\n    return (\r\n        <div className='Calendar'>\r\n            <div className=\"header\">\r\n                <div className=\"title\">\r\n                    <CalendarDate size=\"18\"/>\r\n                    <p>Calendar</p>\r\n                </div>\r\n                <animated.div\r\n                    style={spin}\r\n                    onClick={() => setShowMenu(!showMenu)}\r\n                    className=\"btns\"\r\n                >\r\n                    <span>\r\n                        <CaretUp size=\"20\" />\r\n                    </span>\r\n                </animated.div>\r\n            </div>\r\n            <animated.div style={menuAnimation} className=\"items\">\r\n                {\r\n                    calendarItems.map( item => \r\n                        <div\r\n                            className=\"item\"\r\n                            key={item}\r\n                            onClick={ () => setSelectedProject(item)}\r\n                        >\r\n                            {item}\r\n                        </div>\r\n                    )\r\n                }\r\n            </animated.div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calendar","import React from \"react\";\r\n\r\nfunction ProjectForm({handleSubmit, heading, value, setValue, setShowModal, confirmButtonText}){\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className='ProjectForm'>\r\n      <h3>{heading}</h3>\r\n      <input\r\n          value={value}\r\n          onChange={(e) => setValue(e.target.value)}\r\n          type='text'\r\n          placeholder='project name...'\r\n          autoFocus\r\n      />\r\n      <button className='cancel' onClick={() => setShowModal(false)}>\r\n        cancel\r\n      </button>\r\n      <button className='confirm'>\r\n        {confirmButtonText}\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ProjectForm","import React, {useContext, useState} from 'react'\r\nimport ProjectForm from './ProjectForm'\r\nimport firebase from '../Firebase/index'\r\nimport { TodoContext } from '../Context/index'\r\n\r\nfunction RenameProject({project, setShowModal}){\r\n    // STATE\r\n    const [newProjectName, setNewProjectName] = useState(project.name)\r\n\r\n    // CONTEXT\r\n    const { selectedProject, setSelectedProject } = useContext(TodoContext)\r\n\r\n    // rename Project\r\n    const renameProject = (project, newProjectName) => {\r\n        const projectsRef = firebase.firestore().collection('projects')\r\n        const todosRef = firebase.firestore().collection('todos')\r\n\r\n        const { name : oldProjectName } = project\r\n\r\n        projectsRef\r\n            .where('name', '==', newProjectName)\r\n            .get()\r\n            .then( querySnapshot => {\r\n                if(!querySnapshot.empty){\r\n                    alert('Project with the same name already exists!')\r\n                }else{\r\n                    projectsRef\r\n                        .doc(project.id)\r\n                        .update({\r\n                            name : newProjectName\r\n                        })\r\n                        .then( () => {\r\n                            todosRef\r\n                                .where('projectName', '==', oldProjectName)\r\n                                .get()\r\n                                .then( querySnapshot => {\r\n                                    querySnapshot.forEach( doc => {\r\n                                        doc.ref.update({\r\n                                            projectName : newProjectName\r\n                                        })\r\n                                    })\r\n                                })\r\n                                .then( () => {\r\n                                    if(selectedProject === oldProjectName){\r\n                                        setSelectedProject(newProjectName)\r\n                                    }\r\n                                })\r\n                        })\r\n                }\r\n            })\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n\r\n        renameProject(project, newProjectName)\r\n\r\n        setShowModal(false)\r\n    }\r\n\r\n    return (\r\n        <div className='RenameProject'>\r\n            <ProjectForm\r\n                handleSubmit={handleSubmit}\r\n                heading='Edit project name!'\r\n                value={newProjectName}\r\n                setValue={setNewProjectName}\r\n                setShowModal={setShowModal}\r\n                confirmButtonText='Confirm'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RenameProject","import React, {useContext, useState} from 'react'\r\nimport { Pencil, XCircle } from 'react-bootstrap-icons'\r\nimport Modal from './Modal'\r\nimport RenameProject from './RenameProject'\r\nimport { TodoContext } from '../Context/index'\r\nimport firebase from '../Firebase/index'\r\nimport { useTransition, useSpring, animated } from 'react-spring'\r\n\r\nfunction Project({project, edit}){\r\n    // CONTEXT\r\n    const { defaultProject, selectedProject, setSelectedProject } = useContext(TodoContext)\r\n\r\n    // STATE\r\n    const [showModal, setShowModal] = useState(false)\r\n\r\n    const deleteProject = project => {\r\n        firebase\r\n            .firestore()\r\n            .collection('projects')\r\n            .doc(project.id)\r\n            .delete()\r\n            .then( () => {\r\n                firebase\r\n                    .firestore()\r\n                    .collection('todos')\r\n                    .where('projectName', '==', project.name)\r\n                    .get()\r\n                    .then( (querySnapshot) => {\r\n                        querySnapshot.forEach( doc => {\r\n                            doc.ref.delete()\r\n                        })\r\n                    })\r\n            })\r\n            .then( () => {\r\n                if( selectedProject === project.name ){\r\n                    setSelectedProject(defaultProject)\r\n                }\r\n            })\r\n    }\r\n\r\n    // ANIMATION\r\n    const fadeIn = useSpring({\r\n        from : { marginTop : '-12px', opacity : 0 },\r\n        to : { marginTop : '0px', opacity : 1}\r\n    })\r\n    const btnTransitions = useTransition(edit, {\r\n        from : { opacity : 0, right : '-20px' },\r\n        enter : { opacity : 1, right : '0px' },\r\n        leave : { opacity : 0, right : '-20px' }\r\n    })\r\n\r\n    return (\r\n        <animated.div style={fadeIn} className='Project'>\r\n            <div\r\n                className=\"name\"\r\n                onClick={ () => setSelectedProject(project.name)}\r\n            >\r\n                {project.name}\r\n            </div>\r\n            <div className=\"btns\">\r\n                {\r\n                    btnTransitions((props, editProject) => \r\n                        editProject ?\r\n                        <animated.div style={props} className=\"edit-delete\">\r\n                            <span\r\n                                className=\"edit\"\r\n                                onClick={ () => setShowModal(true)}\r\n                            >\r\n                                <Pencil size=\"13\" />\r\n                            </span>\r\n                            <span\r\n                                className=\"delete\"\r\n                                onClick={ () => deleteProject(project)}\r\n                            >\r\n                                <XCircle size=\"13\" />\r\n                            </span>\r\n                        </animated.div>\r\n                        :\r\n                        project.numOfTodos === 0 ?\r\n                        \"\"\r\n                        :\r\n                        <animated.div style={props} className=\"total-todos\">\r\n                            {project.numOfTodos}\r\n                        </animated.div>\r\n                    )\r\n                }\r\n            </div>\r\n            <Modal showModal={showModal} setShowModal={setShowModal}>\r\n                <RenameProject project={project} setShowModal={setShowModal}/>\r\n            </Modal>\r\n        </animated.div>\r\n    )\r\n}\r\n\r\nexport default Project","import React, { useState } from 'react'\r\nimport Modal from './Modal'\r\nimport ProjectForm from './ProjectForm'\r\nimport { Plus } from 'react-bootstrap-icons'\r\nimport firebase from '../Firebase/index'\r\n\r\nfunction AddNewProject(){\r\n    // STATE\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [projectName, setProjectName] = useState('')\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n\r\n        if( projectName ){\r\n            const projectsRef = firebase.firestore().collection('projects')\r\n\r\n            projectsRef\r\n                .where('name', '==', projectName)\r\n                .get()\r\n                .then( querySnapshot => {\r\n                    if(querySnapshot.empty){\r\n                        projectsRef\r\n                            .add(\r\n                                {\r\n                                    name : projectName\r\n                                }\r\n                            )\r\n                    }else{\r\n                        alert('Project already exists!')\r\n                    }\r\n                })\r\n                \r\n            setShowModal(false)\r\n            setProjectName('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='AddNewProject'>\r\n            <div className=\"add-button\">\r\n                <span onClick={() => setShowModal(true)}>\r\n                    <Plus size=\"20\" />\r\n                </span>\r\n            </div>\r\n            <Modal showModal={showModal} setShowModal={setShowModal}>\r\n                <ProjectForm\r\n                    handleSubmit={handleSubmit}\r\n                    heading='New project!'\r\n                    value={projectName}\r\n                    setValue={setProjectName}\r\n                    setShowModal={setShowModal}\r\n                    confirmButtonText='+ Add Project'\r\n                />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewProject","import React, { useState,  useContext } from 'react'\r\nimport Project from './Project' \r\nimport AddNewProject from './AddNewProject' \r\nimport { Palette, PencilFill, CaretUp } from 'react-bootstrap-icons'\r\nimport { TodoContext } from '../Context/index'\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\nfunction Projects(){\r\n    const [showMenu, setShowMenu] = useState(true);\r\n    const [edit, setEdit] = useState(false)\r\n    const pencilColor = edit ? \"#1088ff\" : \"#000000\"\r\n\r\n    // CONTEXT\r\n    const { projects } = useContext(TodoContext)\r\n\r\n    // ANIMATION\r\n    const spin = useSpring({\r\n        transform : showMenu ? 'rotate(0deg)' : 'rotate(180deg)',\r\n        config : { friction : 10 }\r\n    })\r\n\r\n    const menuAnimation = useSpring({\r\n        display : showMenu ? 'block' : 'none',\r\n        lineHeight : showMenu ? 1.2 : 0\r\n    })\r\n\r\n    return (\r\n        <div className='Projects'>\r\n            <div className=\"header\">\r\n                <div className=\"title\">\r\n                    <Palette size=\"18\" />\r\n                    <p>Projects</p>\r\n                </div>\r\n                <div className=\"btns\">\r\n                    {\r\n                        showMenu && projects.length > 0 &&\r\n                        <span className='edit' onClick={ () => setEdit(edit => !edit)}>\r\n                            <PencilFill size=\"15\" color={pencilColor}/>\r\n                        </span>\r\n                    }\r\n                    <AddNewProject />\r\n                    <animated.span\r\n                        className='arrow'\r\n                        onClick={() => setShowMenu(!showMenu)}\r\n                        style={spin}\r\n                    >\r\n                        <CaretUp size=\"20\" />\r\n                    </animated.span>\r\n                </div>\r\n            </div>\r\n            <animated.div style={menuAnimation} className=\"items\">\r\n                {\r\n                    projects.map( project => \r\n                        <Project\r\n                            project={project}\r\n                            key={project.id}\r\n                            edit={edit}\r\n                        />\r\n                    )\r\n                }\r\n            </animated.div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects","import moment from 'moment'\r\nimport React, {useContext, useState} from 'react'\r\nimport { ArrowClockwise, CheckCircleFill, Circle, Trash } from 'react-bootstrap-icons'\r\nimport { TodoContext } from '../Context/index'\r\nimport firebase from '../Firebase/index'\r\nimport { useSpring, useTransition, animated } from 'react-spring'\r\n\r\nfunction Todo({todo}){\r\n    // STATE\r\n    const [hover, setHover] = useState(false)\r\n\r\n    // CONTEXT\r\n    const { selectedTodo, setSelectedTodo } = useContext(TodoContext)\r\n\r\n    const deleteTodo = todo => {\r\n        firebase\r\n            .firestore()\r\n            .collection('todos')\r\n            .doc(todo.id)\r\n            .delete()\r\n    }\r\n\r\n    const checkTodo = todo => {\r\n        firebase\r\n            .firestore()\r\n            .collection('todos')\r\n            .doc(todo.id)\r\n            .update({\r\n                checked : !todo.checked\r\n            })\r\n    }\r\n\r\n    const repeatNextDay = todo => {  \r\n        const nextDayDate = moment(todo.date, 'MM/DD/YYYY').add(1, 'days')\r\n\r\n        const repeatedTodo = {\r\n            ...todo,\r\n            date : nextDayDate.format('MM/DD/YYYY'),\r\n            day : nextDayDate.format('d'),\r\n            checked : false\r\n        }\r\n\r\n        delete repeatedTodo.id\r\n        \r\n        firebase\r\n            .firestore()\r\n            .collection('todos')\r\n            .add(repeatedTodo)\r\n    }\r\n\r\n    const handleDelete = (todo) => {\r\n        deleteTodo(todo)\r\n        if(selectedTodo === todo){ \r\n            setSelectedTodo(false)\r\n        }\r\n    }\r\n\r\n    // ANIMATION\r\n    const fadeIn = useSpring({\r\n        from : { marginTop : '-12px', opacity : 0 },\r\n        to : { marginTop : '0px', opacity : 1}\r\n    })\r\n\r\n    const checkTransitions = useTransition(todo.checked, {\r\n        from : { position : 'absolute', transform : 'scale(0)' },\r\n        enter : { transform : 'scale(1)' },\r\n        leave : { transform : 'scale(0)' }\r\n    })\r\n\r\n    return (\r\n        <animated.div style={fadeIn} className='Todo'>\r\n            <div\r\n                className=\"todo-container\"\r\n                onMouseEnter={() => setHover(true)}\r\n                onMouseLeave={() => setHover(false)}\r\n            >\r\n                <div\r\n                    className=\"check-todo\"\r\n                    onClick={ () => checkTodo(todo) }\r\n                >\r\n                    {\r\n                        checkTransitions((props, checked) => \r\n                            checked ?\r\n                            <animated.span style={props} className=\"checked\">\r\n                                <CheckCircleFill color=\"#bebebe\" />\r\n                            </animated.span>\r\n                            :\r\n                            <animated.span style={props} className=\"unchecked\">\r\n                                <Circle color={todo.color} />\r\n                            </animated.span>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div\r\n                    className=\"text\"\r\n                    onClick={ () => setSelectedTodo(todo)}\r\n                >\r\n                    <p style={{color : todo.checked ? '#bebebe' : '#000000'}}>{todo.text}</p>\r\n                    <span>{todo.time} - {todo.projectName}</span>\r\n                    <div className={`line ${todo.checked ? 'line-through' : ''}`}></div>\r\n                </div>\r\n                <div\r\n                    className=\"add-to-next-day\"\r\n                    onClick={() => repeatNextDay(todo)}\r\n                >\r\n                    {\r\n                        todo.checked &&\r\n                        <span>\r\n                            <ArrowClockwise />\r\n                        </span>\r\n                    }\r\n                </div>\r\n                <div\r\n                    className=\"delete-todo\"\r\n                    onClick={ () => handleDelete(todo)}\r\n                >\r\n                    {\r\n                        (hover || todo.checked) &&\r\n                        <span>\r\n                            <Trash />\r\n                        </span>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </animated.div>\r\n    )\r\n}\r\n\r\nexport default Todo","import moment from 'moment'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Todo from './Todo'\r\n\r\nfunction Next7Days({ todos }) {\r\n    const [weekTodos, setWeekTodos] = useState([])\r\n\r\n    useEffect(() => {\r\n        const days = ['0', '1', '2', '3', '4', '5', '6']\r\n\r\n        const sortedTodosByDay = days.map(day => {\r\n            return {\r\n                todos: todos.filter(todo => todo.day === day),\r\n                number: day\r\n            }\r\n        })\r\n\r\n        const today = parseInt(moment().format('d'))\r\n\r\n        const arrangeDays = sortedTodosByDay.slice(today).concat(sortedTodosByDay.slice(0, today))\r\n\r\n        setWeekTodos(arrangeDays)\r\n    }, [todos])\r\n\r\n    return (\r\n        <div className='Next7Days'>\r\n            {\r\n                weekTodos.map(day =>\r\n                    <div key={day.number}>\r\n                        <div className='day'>\r\n                            <div className='name'>\r\n                                {moment(day.number, 'd').format('dddd')}\r\n                                {day.number === moment().format('d') && ' (Today)'}\r\n                            </div>\r\n                            <div className='total-todos'>\r\n                                ({day.todos.length})\r\n                            </div>\r\n                        </div>\r\n                        <div className='todos'>\r\n                            {\r\n                                day.todos.map(todo =>\r\n                                    <Todo key={todo.id} todo={todo} />\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Next7Days","import React, {useContext} from 'react'\r\nimport Todo from './Todo'\r\nimport Next7Days from './Next7Days'\r\nimport { TodoContext } from '../Context/index'\r\n\r\nfunction Todos(){\r\n    const { todos, selectedProject } = useContext(TodoContext)\r\n\r\n    return (\r\n        <div className='Todos'>\r\n            <div className='selected-project'>\r\n                {selectedProject}\r\n            </div>\r\n            <div className=\"todos\">\r\n            {\r\n                selectedProject === \"next 7 days\" ?\r\n                <Next7Days todos={todos} />\r\n                :\r\n                todos.map( todo => \r\n                    <Todo todo={todo} key={todo.id} />    \r\n                )\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todos","import React, {useContext, useEffect, useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { TodoContext } from '../Context/index'\r\nimport moment from 'moment'\r\nimport firebase from '../Firebase/index'\r\n\r\nfunction EditTodo(){\r\n    // STATE\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState(new Date())\r\n    const [time, setTime] = useState(new Date())\r\n    const [todoProject, setTodoProject] = useState('')\r\n\r\n    // CONTEXT\r\n    const { selectedTodo, projects } = useContext(TodoContext)\r\n\r\n    useEffect(() => {\r\n        if(selectedTodo){\r\n            setText(selectedTodo.text)\r\n            setDay(moment(selectedTodo.date, 'MM/DD/YYYY'))\r\n            setTime(moment(selectedTodo.time, 'hh:mm A'))\r\n            setTodoProject(selectedTodo.projectName)\r\n        }\r\n    }, [selectedTodo])\r\n\r\n    useEffect(() => {\r\n        if(selectedTodo){\r\n            firebase\r\n                .firestore()\r\n                .collection('todos')\r\n                .doc(selectedTodo.id)\r\n                .update({\r\n                    text,\r\n                    date : moment(day).format('MM/DD/YYYY'),\r\n                    day : moment(day).format('d'),\r\n                    time : moment(time).format('hh:mm A'),\r\n                    projectName : todoProject\r\n                })\r\n        }\r\n\r\n    }, [text, day, time, todoProject])\r\n\r\n    function handleSubmit(e){\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                selectedTodo &&\r\n                <div className='EditTodo'>\r\n                    <div className=\"header\">\r\n                        Edit Todo\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <TodoForm\r\n                            handleSubmit={handleSubmit}\r\n                            text={text}\r\n                            setText={setText}\r\n                            day={day}\r\n                            setDay={setDay}\r\n                            time={time}\r\n                            setTime={setTime}\r\n                            todoProject={todoProject}\r\n                            setTodoProject={setTodoProject}\r\n                            projects={projects}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditTodo","import './App.css';\nimport Sidebar from './Components/Sidebar';\nimport Main from './Components/Main';\nimport User from './Components/User';\nimport AddNewTodo from './Components/AddNewTodo.jsx';\nimport Calendar from './Components/Calendar.jsx';\nimport Projects from './Components/Projects.jsx';\nimport Todos from './Components/Todos.jsx';\nimport EditTodo from './Components/EditTodo.jsx';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Sidebar>\n        <User />\n        <AddNewTodo />\n        <Calendar />\n        <Projects />\n      </Sidebar>\n\n      <Main>\n       <Todos />\n       <EditTodo />\n      </Main>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { TodoContextProvider } from './Context'\r\n\r\n\r\nReactDOM.render(\r\n  <TodoContextProvider>\r\n    <App />\r\n  </TodoContextProvider>\r\n  ,  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}